Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 (primary key)
ii. Hours = foreign key - business_id: 1562
iii. Category = foreign key - business_id: 2643
iv. Attribute = foreign key - business_id: 1115
v. Review = 10000 (primary key), foreign key - business_id: 8090, foreign key - user_id: 9581
vi. Checkin = foreign key - business_id: 493
vii. Photo = 10000 (primary key), foreign key - business_id: 6493
viii. Tip = foreign key - user_id: 537 , foreign key - business_id: 3979
ix. User = 10000 (primary key)
x. Friend = foreign key - user_id: 11
xi. Elite_years = foreign key - user_id: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:

SELECT COUNT(1),
CASE
WHEN NULL THEN "1"
ELSE "other"
END 
FROM user
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:  1.0		max:  5.0		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

SELECT city,SUM(review_count) AS Review
FROM business
GROUP BY city
ORDER BY Review DESC
	
	
	Copy and Paste the Result Below:
	
+-----------------+--------+
| city            | Review |
+-----------------+--------+
| Las Vegas       |  82854 |
| Phoenix         |  34503 |
| Toronto         |  24113 |
| Scottsdale      |  20614 |
| Charlotte       |  12523 |
| Henderson       |  10871 |
| Tempe           |  10504 |
| Pittsburgh      |   9798 |
| Montréal        |   9448 |
| Chandler        |   8112 |
| Mesa            |   6875 |
| Gilbert         |   6380 |
| Cleveland       |   5593 |
| Madison         |   5265 |
| Glendale        |   4406 |
| Mississauga     |   3814 |
| Edinburgh       |   2792 |
| Peoria          |   2624 |
| North Las Vegas |   2438 |
| Markham         |   2352 |
| Champaign       |   2029 |
| Stuttgart       |   1849 |
| Surprise        |   1520 |
| Lakewood        |   1465 |
| Goodyear        |   1155 |
+-----------------+--------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT
stars
,COUNT(review_count) AS 'count'
FROM business
WHERE city = 'Avon'
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):


+-------+-------+
| stars | count |
+-------+-------+
|   1.5 |     1 |
|   2.5 |     2 |
|   3.5 |     3 |
|   4.0 |     2 |
|   4.5 |     1 |
|   5.0 |     1 |
+-------+-------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT
stars
,COUNT(review_count) AS 'count'
FROM business
WHERE city = 'Beachwood'
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-------+-------+
| stars | count |
+-------+-------+
|   2.0 |     1 |
|   2.5 |     1 |
|   3.0 |     2 |
|   3.5 |     2 |
|   4.0 |     1 |
|   4.5 |     2 |
|   5.0 |     5 |
+-------+-------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

SELECT
name
,review_count
FROM user
ORDER BY review_count desc
LIMIT 3
	
		
	Copy and Paste the Result Below:
		
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

	Posing more reviews not exactly correlate with more fans as the only explanation, but we still can state a correlation between number of reviews and number of fans since 5 of the 10 users with most reviews are in the top 10 users with most fans. Also there are some diviation in this pattern as the top 1 user with most fans, Amy, is not in the list of the 25 users with most reviews. If we look information in the column "average_stars" we can note that that minimum average among the 10 users with more fans is 3.21 and the maximum is 4.41. Based on that, I conclude that various factors should be considered to undestand what makes users to have fans.

SQL CODE:
	
SELECT name,review_count,fans
FROM user
ORDER BY fans DESC

OVERVIEW RESULTS:

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
| Mark      |          861 |  115 |
| Tiffany   |          408 |  111 |
| bernice   |          255 |  105 |
| Roanna    |         1039 |  104 |
| Angela    |          694 |  101 |
| .Hon      |         1246 |  101 |
| Ben       |          307 |   96 |
| Linda     |          584 |   89 |
| Christina |          842 |   85 |
| Jessica   |          220 |   84 |
| Greg      |          408 |   81 |
| Nieves    |          178 |   80 |
| Sui       |          754 |   78 |
| Yuri      |         1339 |   76 |
| Nicole    |          161 |   73 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews with the word "love" (1780) than with the word "hate" (232) as shown in the results bellow:

+-----------+-----------+
| love_text | hate_text |
+-----------+-----------+
|      1780 |       232 |
+-----------+-----------+


	SQL code used to arrive at answer:


SELECT (SELECT COUNT(text)
FROM review
WHERE text like "%love%") as  love_text,

(SELECT COUNT(text) 
FROM review
WHERE text like "%hate%") as hate_text

	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT
id
,name
,fans
FROM user
ORDER BY fans desc
LIMIT 10
	
	
	Copy and Paste the Result Below:

+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

My choice is category restaurants and the city of Toronto

	
i. Do the two groups you chose to analyze have a different distribution of hours?

The groups analysed have a different distribution of hours since the 2-3 group opens only on monday and tuesday and the 4-5 group opens from wednesday to sunday.


SQL CODE for analysis:

SELECT
b.city
,c.category
,b.stars
,b.name
,COUNT(name) AS stores
,CASE WHEN h.hours LIKE '%sunday%' THEN 1 WHEN h.hours LIKE '%monday%' THEN 2 WHEN h.hours LIKE '%tuesday%' THEN 3 WHEN h.hours LIKE '%wednesday%' THEN 4 WHEN h.hours LIKE '%thursday%' THEN 5 WHEN h.hours LIKE '%friday%' THEN 6 WHEN h.hours LIKE '%saturday%' THEN 7 END AS week_days
,SUM(b.review_count)
,CASE WHEN b.stars BETWEEN 2 AND 3 THEN 'Star Rating 2-3' WHEN b.stars BETWEEN 4 AND 5 THEN 'Star Rating 4-5' END AS star_rating
,b.neighborhood
FROM business b INNER JOIN category c ON b.id =c.business_id INNER JOIN hours h ON h.business_id = b.id
WHERE b.city = 'Toronto' AND c.category LIKE 'Restaurants'
GROUP BY week_days
ORDER BY b.stars desc

ii. Do the two groups you chose to analyze have a different number of reviews?

Yes. The 2-3 group has 86 reviews and the 4-5 group has 206.

SQL CODE for analysis:

SELECT
b.city
,c.category
,b.stars
,SUM(b.review_count) AS total_reviews
,COUNT(b.id) AS stores
,CASE WHEN b.stars BETWEEN 2 AND 3 THEN 'Star Rating 2-3' WHEN b.stars BETWEEN 4 AND 5 THEN 'Star Rating 4-5' END AS star_rating
,b.neighborhood
FROM business b INNER JOIN category c ON b.id =c.business_id
WHERE b.city = 'Toronto' AND c.category LIKE 'Restaurants' AND star_rating IS NOT NULL
GROUP BY star_rating
ORDER BY total_reviews desc         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

The group 2-3 has 3 stores in two neiborhood while the 4-5 group has 5 stores along five different neighborhood.

SQL code used for analysis:

SELECT
b.city
,c.category
,b.stars
,SUM(b.review_count) AS total_reviews
,COUNT(b.id) AS stores
,CASE WHEN b.stars BETWEEN 2 AND 3 THEN 'Star Rating 2-3' WHEN b.stars BETWEEN 4 AND 5 THEN 'Star Rating 4-5' END AS star_rating
,b.neighborhood
FROM business b INNER JOIN category c ON b.id =c.business_id
WHERE b.city = 'Toronto' AND c.category LIKE 'Restaurants' AND star_rating IS NOT NULL
GROUP BY b.neighborhood
ORDER BY star_rating desc		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: there are much more opened business (8480) than the ones closed (1520)
         
         
ii. Difference 2: the review number is greater for the opened business, 269300, against only 35261 for the closed business
         
         
         
SQL code used for analysis:

SELECT
AVG(b.stars),
AVG(b.review_count),
SUM(b.review_count),
COUNT(b.id),
b.is_open
FROM business b
GROUP BY b.is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do: Verify the favorite type of food among users
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
For this analysis the columns 'name', 'stars' and 'review_count' in the business table is needed, as well as column 'category' in the category table so we can compare different type of food in the categories: Italian, French, Mexican, Chinese, Korean, Japanese and Indian. We will also consider number of reviews for a more complete analysis.
                           
                  
iii. Output of your finished dataset:

+----------+----------------------+--------------+---------------------+
| category | Number_Of_Resturants | AVG(b.stars) | SUM(b.review_count) |
+----------+----------------------+--------------+---------------------+
| Korean   |                    2 |         4.25 |                  63 |
| French   |                    2 |          4.0 |                 257 |
| Japanese |                    5 |          3.8 |                 152 |
| Indian   |                    5 |          3.6 |                  63 |
| Italian  |                    2 |          3.5 |                 148 |
| Mexican  |                    7 |          3.5 |                 327 |
| Chinese  |                    4 |        3.125 |                 796 |
+----------+----------------------+--------------+---------------------+
         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT
c.category
,COUNT(b.name) AS Number_Of_Resturants
,AVG(b.stars)
,SUM(b.review_count)
FROM business b INNER JOIN category c ON c.business_id = b.id
WHERE c.category IN("Italian","French","Mexican","Chinese","Korean","Japanese","Indian")
GROUP BY c.category
ORDER BY AVG(b.stars) DESC